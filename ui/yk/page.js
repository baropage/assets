function showYkPage(id) {    var pid="page-"+id;    var main=w2ui.layout.el("main");    var page=null;    $(main).find(".yk-page").each(function(idx) {       if(this.id==pid) {           page=this;           $(this).show();        } else {           $(this).hide();        }    });    return page;}function rightMenuClick(btn) {    var id=$(btn).attr("id");    console.log("rightMenuClick id=="+id);    if( $(btn).hasClass("lightblue") ) {        if( $(".icon-map").hasClass("icon-map-hide") ) {            showIcons();        } else {            hideIcons();        }    } else {        showSearchFormLayer();    }}function setUploadForm(div) {    if(cf[div]) {        $('#'+div).html(cf[div]);    } else {        $.get("/common/get.php?action=pageVar&name=uploadForm", function(data) {            $('#'+div).html(data);            initUploadForm();            cf[div]=data;        });    }}function initUploadForm() {    cf.files=$('#file').w2field('file');    $("#uploadPath").val(cf.currentUploadPath);    $("#fileUploadStart").click(function() {        var fileSelected=cf.files.data("selected");        console.log(">>",cf.files, fileSelected);        for(var n=0;n<fileSelected.length;n++) {            setUploadFile(fileSelected[n]);        }        if(cf.uploadFileArray.length==0 ) return alert("업로드 파일이 없습니다");        uploadLog("업로드 파일수 : "+cf.uploadFileArray.length );        uploadNext();    });} function setSensorMonitorTable() {    cf.sensorMonitorTable = new Tabulator("#sensorMonitorTable", {     	placeholder:"로딩중",     	maxHeight:"100%",     	tooltipGenerationMode: "hover",     	tooltipsHeader: true,        columns:[            {formatter:"rownum", width:65},            {title:"품명구분", field:"itemName", width:200, headerFilter:true, headerFilterPlaceholder:"품명 찾기..."},            {title:"측정명", field:"measureName", width:250, headerFilter:true, headerFilterPlaceholder:"측정명 찾기..."},            {title:"Name", field:"Name", width:95},            {title:"ID", field:"ID", width:110},            {title:"Aktual", field:"Aktual", width:110},            {title:"Nominal", field:"Nominal", width:110},            {title:"Etc", field:"<--|-->", width:80, align:"center"},            {title:"pos", field:"pos", width:110},            {title:"Tol", field:"Tol", width:110},            {title:"neg", field:"neg", width:110},            {title:"Tol", field:"Tol", width:110},            {title:"Diff", field:"Diff", width:110},            {title:"측정자", field:"userName", width:80},            {title:"측정일", field:"measureDate", width:250},        ],    });    return cf.sensorMonitorTable;}function setCommMonitorTable() {    var previewButtonFormat = function(cell, data ) {        return "<button onclick='cf.currentButton=this'>미리보기</button>";    };    cf.commMonitorTable = new Tabulator("#commMonitorTable", {     	layout:"fitColumns",      	placeholder:"트리 항목을 클릭하세요",     	tooltipGenerationMode: "hover",     	tooltipsHeader: true,        columns:[            {formatter:"rownum",  width:65},            {title:"파일명", field:"name"},            {title:"경로", field:"url"},            {title:"파일크기", field:"size", width:100, align:"center"},            {title:"생성일시", field:"createDate", width:180, align:"center"},            {title:"미리보기", formatter:previewButtonFormat, width:120, align:"center", cellClick:function(e, cell){                var row=cell.getRow(), data=row.getData();                console.log("xx preview cell click xx", row, data, cf.currentButton);                cf.currentButton=null;            }}        ],    });    return cf.commMonitorTable;}function setMeasureOverviewTable() {    var downloadButtonFormat = function(cell, data ) {        console.log("xxx download fmt xxx",  cell)        return "<button onclick='cf.currentButton=this'>다운로드</button>";    };    var fileSizeFormat = function(cell, data) {        var size=parseInt(cell.getValue());        console.log("xxx fileSize fmt xxx", cell, size)        return fileSizeFmt(size);    };	cf.measureOverviewTable = new Tabulator("#measureOverviewTable", {     	layout:"fitColumns",      	placeholder:"로딩중",     	tooltipGenerationMode: "hover",     	tooltipsHeader: true,        columns:[            {formatter:"rownum",  width:65},            {title:"파일명", field:"name", width:250},            {title:"파일경로", field:"path"},            {title:"파일크기", field:"size", formatter:fileSizeFormat, width:120, align:"right" },            {title:"생성일시", field:"createDate", width:150, align:"center"},            {title:"삭제", field:"deleteCheck", formatter:"buttonCross", width:80, align:"center", cellClick:function(e, cell){                    var row=cell.getRow(), data=row.getData();                    console.log("xx delete check xx", row, data);            }},            {title:"", formatter:downloadButtonFormat, width:140, align:"center", cellClick:function(e, cell){                    var row=cell.getRow(), data=row.getData();                    console.log("xx down xx", row, data);                    cf.currentButton=null;            }}        ],     	rowClick:function(e, row) {      	    console.log("xx click xx", row);     	    cf.currentRow=row;     	},    });}function formSearchButton() {    var el=getEl("search-buttons");    if(el.childNodes.length==0) {        var b1=createW2Button("search", "vicon-application_view_detail", "조회", function() {            var tags=getEl('file_tags').getData();            console.log("search click ", tags);            alert(cf.currentMenuId+" search click !!!");            $(".form-panels").removeClass("active");        });        el.appendChild(b1);    }}function setMeasureForm() {    if(cf.mesureFormData) return;    ajaxJson(getUrl("getMeasureFormData"), function(json) {        flatpickr(getEl("measure_date"), {            weekNumbers: true,            enableTime: false,            dateFormat: "Y-m-d",            minDate: "2021-06"        });                var sel=getEl("measure_file_type");        addOpt(sel, "excel", "EXCEL 파일", true);        addOpt(sel, "pdf", "PDF 파일");        sel.onchange=function() {            var type=$(this).val();            var sel=getEl("measure_file_result");            clearOpt(sel);            addOpt(sel,"", "전체");            console.log("xx file type change xx file_type==", type);            if(type=="excel") {                for(var item of json.excelCombo ) {                    addOpt(sel, item.key, item.value);                }            } else {                for(var item of json.pdfCombo ) {                    addOpt(sel, item.key, item.value);                }            }        };                sel=getEl("measure_name")        addOpt(sel,"", "전체", true);        for(var item of json.itemCombo ) {            addOpt(sel, item.key, item.value);        }        sel=getEl("measure_file_result");        addOpt(sel,"", "전체");        for(var item of json.excelCombo ) {            addOpt(sel, item.key, item.value);        }        for(var item of json.pdfCombo ) {            addOpt(sel, item.key, item.value);        }        cf.mesureFormData=json;    });}function setPlcForm() {    if(cf.plcFormData) return;    ajaxJson(getUrl("getPlcFormData"), function(json) {        var sel=getEl("plc_choice");        addOpt(sel, "", "PLC선택", true);        for(var node of cf.plcInfo) {            addOpt(sel, node.id, node.text);        }        sel.onchange=function() {            var plc=$(this).val();            var sel=getEl("plc_date_choice");            clearOpt(sel);            addOpt(sel, "", "전체");            if(plc) {                for(var cur of json.plcComboNodes[plc]) addOpt(sel, cur.key, cur.value);            }        }        setYearCombo(getEl("sel_year"));        setMonthCombo(getEl("sel_month"));        setDayCombo(getEl("sel_day"));        flatpickr(getEl("plc_start_time"), {            enableTime: true,            noCalendar: true,            dateFormat: "H:i"        });        flatpickr(getEl("plc_end_time"), {            enableTime: true,            noCalendar: true,            dateFormat: "H:i"        });        cf.plcFormData=json;    });}function showSearchFormLayer( id) {    var menuGroup=cf.menuGroup;    if(!id) id=cf.currentMenuId;    if(!menuGroup) menuGroup="plc";    if( menuGroup=="measure" ) {        setMeasureForm();    } else {        setPlcForm();    }    var formId=menuGroup+"SearchForm";    $(".form-panels").show();    $(".form-panels").css({"display":"flex", "align-items":"center"});    cf.formOpenCheck=true;    setTimeout(function() { cf.formOpenCheck=false }, 1000);    $(".form-panels").find(".tab-form-area").each(function(idx) {        var cur=$(this);        console.log("xxx show search form xxx", formId, cur.attr("id"));        if(formId) {            if(formId==cur.attr("id")) cur.show(); else cur.hide();        } else {            if(idx==0) cur.show(); else cur.hide();        }    });    formSearchButton();    hideMenus();}function initTestButton() {    var el=w2ui.layout.el("bottom");    var b1=createW2Button("showIconMenu", "vicon-application_form_magnify",         "아이콘 메뉴보기", function() { showIcons() }    );    var b2=createW2Button("hideIconMenu", "vicon-application_side_contract",         "아이콘 감추기", function() { hideIcons() }    );    var b3=createW2Button("searchPlcImage", "vicon-chart_curve_add",         "PLC 모니터링 시작", function() { searchPlcImage() }    );    var b4=createW2Button("replay", "vicon-control_play_blue",         "다시재생", function() {            if(!cf.showList || cf.showList.length==0 ) {                w2alert("모니터링 이미지가 없습니다");                return;            }            cf.showIdx=0;                drwaPlcImages();        }    );    var status=document.createElement("span");    status.id="pageStatus";    status.style="margin-left:12px";    el.style="padding-top:6px";    el.appendChild(b1);    el.appendChild(b2);    el.appendChild(b3);    el.appendChild(b4);    el.appendChild(status);}function drawPlcImages() {    var idx=cf.showIdx, list=cf.showList, len=list.length;    if(idx<len ) {        var cur=list[idx];        var c=cf.canvas;        if(c) cf.ctx.clearRect(0, 0, c.width, c.height);        console.log("idx:"+idx, cur);        cf.ctx.drawImage(cur.img, 0, 0);        setTimeout(drawPlcImages, 1500);        cf.showIdx++;        setPageStatus(idx+" 번째 이미지");    } else {        setPageStatus("PLC 이미지 조회 완료 (이미지 갯수: "+len+" 건)");    }}function setPageStatus(msg) {    $("#pageStatus").html(msg);}function initIcons() {    $(".icon-map").click(function () {    	hideIcons();    });    $(".drawer-trigger").click(function () {        $(".drawer").addClass("drawer-active");        $(".icons").addClass("icons-active");        $(".icon-map").addClass("icon-map-active");        $(".drawer-trigger").addClass("drawer-trigger-active");        $(".drawer-trigger").removeClass("icon-active");        $(this).addClass("icon-active");    });    $(".drawer-close").click(function () {        hideMenus();    });}function showIcons() {    $(".icon-map").removeClass("icon-map-hide");    $(".icon-levels").removeClass("icon-levels-hide");    $(".icon-floorplans").removeClass("icon-floorplans-hide");    $(".icon-map").addClass("icon-map-show");	$(".icon-levels").addClass("icon-levels-show");	$(".icon-floorplans").addClass("icon-floorplans-show");}function hideIcons() {    // Close drawer    $(".drawer").removeClass("drawer-active");    // Reset all icons    $(".icons").removeClass("icons-active");    $(".icons a").removeClass("icon-active");    $(".icon-map").removeClass("icon-map-active icon-map-show");    $(".icon-levels").removeClass("drawer-trigger-active icon-levels-show");    $(".icon-floorplans").removeClass("drawer-trigger-active icon-floorplans-show");        // Last icons animation    $(".icon-map").addClass("icon-map-hide");    $(".icon-levels").addClass("icon-levels-hide");    $(".icon-floorplans").addClass("icon-floorplans-hide");}function hideMenus() {    $(".drawer").removeClass("drawer-active");    $(".icons").removeClass("icons-active");    $(".icons a").removeClass("icon-active");    $(".icon-map").removeClass("icon-map-active");    $(".drawer-trigger").removeClass("drawer-trigger-active");}function searchPlcImage() {    var url=cf.searchPlcUrl;    if(!url) {	    getUrl("searchPlcImage");        url+="&plc=plc1&date=20210604&startTime=16:00:00&endTime=16:10:00";    }    ajaxJson(url, function(json) {        if(cf.showList) cf.showList=null;        cf.showIdx=0;        cf.showList=json.children;        var last=cf.showList.length-1;        for(var n=0; n<cf.showList.length; n++) {            var cur=cf.showList[n];            var img = new Image();             img.src = cur.url;            cur.img=img;            if(n==last) {                img.onload = function() {                    setTimeout(drawPlcImages,4000);                }            }        }        console.log(">> search plc image cf", cf);    });}function findPlcNode(plc) {    for(var cur of cf.plcLastFiles ) {        if(cur.plc==plc) return cur;    }    return null;}function loadPlcLastImage() {    var url=getUrl("plcLastFiles");    cf.plcLastIndex=0;    ajaxJson(url, function(list) {        setLayoutHeight();	    for(var cur of list ) {	        var plc=findPlcNode(cur.plc);	        if(!plc.img) {	            plc.img = new Image();     	        }	        if( plc.url!=cur.url ) {                plc.img.src = cur.url;                plc.url=cur.url;                plc.date=cur.date;                plc.changed=true;	        } 	    }	    console.log("load plc>>", cf.plcLastFiles);	    setTimeout(checkPlcLastImage, 2500);	});}function loadBeltHousing() {    var url=getUrl("searchPlcImage");    url+="&plc=plc2&date=20210604&startTime=16:00:00&endTime=16:10:00";    cf.searchPlcUrl=url;    ajaxJson(url, function(json) {        if(cf.showList) cf.showList=null;        cf.showIdx=0;        cf.showList=json.children;        var last=cf.showList.length-1;        for(var n=0; n<cf.showList.length; n++) {            var cur=cf.showList[n];            var img = new Image();             img.src = cur.url;            cur.img=img;            if(n==last) {                img.onload = function() {                    setTimeout(drawPlcImages,100);                }            }        }        console.log(">> search plc image cf", cf);    });}function loadSensorHousing() {    var url=getUrl("searchPlcImage");    url+="&plc=plc1&date=20210604&startTime=16:00:00&endTime=16:10:00";    cf.searchPlcUrl=url;    ajaxJson(url, function(json) {        if(cf.showList) cf.showList=null;        cf.showIdx=0;        cf.showList=json.children;        var last=cf.showList.length-1;        for(var n=0; n<cf.showList.length; n++) {            var cur=cf.showList[n];            var img = new Image();             img.src = cur.url;            cur.img=img;            if(n==last) {                img.onload = function() {                    setTimeout(drawPlcImages,100);                }            }        }        console.log(">> search plc image cf", cf);    });}function loadGl3() {        var url=getUrl("searchPlcImage");    url+="&plc=plc3&date=20210615&startTime=10:00:00&endTime=10:10:00";    cf.searchPlcUrl=url;    ajaxJson(url, function(json) {        if(cf.showList) cf.showList=null;        cf.showIdx=0;        cf.showList=json.children;        var last=cf.showList.length-1;        for(var n=0; n<cf.showList.length; n++) {            var cur=cf.showList[n];            var img = new Image();             img.src = cur.url;            cur.img=img;            if(n==last) {                img.onload = function() {                    setTimeout(drawPlcImages,100);                }            }        }        console.log(">> search plc image cf", cf);    });}function checkPlcLastImage() {     if( cf.currentMenuId!="plcOverview" ) return;    if( cf.plcLastIndex>=cf.plcLastFiles.length) {        cf.plcLastIndex=0;        return loadPlcLastImage();    }    cf.plcIndex=cf.plcLastIndex++;    drawPlcLastImage();        setTimeout(checkPlcLastImage, 3500);    }function drawPlcLastImage() {    var plc=cf.plcLastFiles[cf.plcIndex];    if(!plc) return;    if( plc.img ) {                var c=cf.canvas;        if(c) cf.ctx.clearRect(0, 0, c.width, c.height);        cf.ctx.drawImage(plc.img, 0, 0);    }        setPageStatus("PLC: "+ plc.plc+" URL: "+plc.url+" DATE: "+plc.date);}/* YK 페이지 시작 */function mesureSidebarClick(node) {    }function pdfSidebarClick(node, tree) {    console.log("xx pdfSidebarClick xx", node);    if(node) {        if(tree) tree.select(node.id);        showPDF("/images/3d/"+node.id);    }}function excelSidebarClick(node, tree) {    // sensorMonitor    if(cf.sensorMonitorTable) {        cf.sensorMonitorTable.setHeaderFilterValue("itemName", node.text);    }}function commSidebarClick(node) {    /*     [호출] getCommMonitor    param=> plcId, date */    var icon=node.icon, id=node.id;    if( icon.indexOf("folder_table")>0 && node.expanded ) {        if( id=="plc1" || id=="plc2" || id=="plc3" ) {            /*            var url=getUrl("getCommMonitor");            url+="&plcId="+id;            ajaxJson(url, function(json) {               cf.commMonitorTable.setData(json);            });            */        } else {            var url=getUrl("getCommMonitor");            url+="&plcId=3d&folder="+node.id;            ajaxJson(url, function(json) {               cf.commMonitorTable.setData(json);            });        }    } else if( icon.indexOf("calendar_view_day")>0 ) {        /*날짜를 선택한 경우 */        var arr=id.split("_");        var url=getUrl("getCommMonitor");        url+="&plcId="+arr[0]+"&date="+arr[1];        console.log("xxx comm sidebar click xxx", url);        ajaxJson(url, function(json) {           cf.commMonitorTable.setData(json);        });    } else {            }} 